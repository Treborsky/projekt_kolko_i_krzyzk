import numpy as np


def start_game(n):
    A=np.array([[0]*(n)]*(n))
    return A

def ruch(poz_x,poz_y,wart,A):
    if A[poz_x][poz_y]==0:
        A[poz_x][poz_y]=wart #ew zmieniÄ‡ tutaj
    return A
    
def order(A):
    lst=[]
    for i in range(3):
        lstt=[]
        for j in range(3):
            lstt.append(A[i][j])
        lst.append(lstt)    
    for j in range(3):
        lstt=[]
        for i in range(3):
            lstt.append(A[i][j])
        lst.append(lstt)
    lsttt=[]    
    for i in range(3):
        lsttt.append(A[i][i])
    lst.append(lsttt)    
    q=[A[2][0],A[1][1],A[0][2]]
    lst.append(q)
    lst=np.array(lst)
    return lst
    
def ordnung(A):
    lst=[]
    Q=list(order(A))
    for i in range(8):
        q=list(Q[i])
        secik=set(list(q))
        lst.append(secik)
    print(lst)
    return lst 

def ilew(x,lst):
    s=0
    for i in lst:
        if lst[i]==x:
            s+=1
    return s     
        
def fajen(i,A,x=1):
    B=order(A)
    if i>=0 and i<3:
        for j in range(3):
            if B[i][j]==0:
                ruch(j,i,1,A)
    else if (i>=3 and i<6):
        for j in range(3):
            if B[j][i]==0:
                ruch(j,i,1,A)
                
            
    return A            
        
        

def komputer(A):
    Q=list(ordnung(A))
    P=order(A)
    s=0
    for i in range(3):
        for j in range(3):
            if A[i][j]==0:
                s+=1
    if s==9:
        ruch(1,1,1,A)
    for i in range(8):
        if len(Q[i])==2:
            if ilew(1,Q[i])==2:
                A=fajen(i,A,1)
                pass
    return A
    
#def gra():
#    A=start_game(3)
#    
#    komputer(A)
#    print(A)
#    print("wykonaj ruch")
#    x=int(input("podaj x"))
#    y=int(input("podaj y"))
#    ruch(x,y,-1,A)
#    print(A)
#    return 0
#
#gra()
#"""A=start_game(3)
#
#komputer(A)
#print(order(A))
#
#print(A)"""
    
